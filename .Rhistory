library(readxl)
EagleSFR <- read_excel("C:/Users/dell/Dropbox/! 2023 SGDS1 Student Files/SGDS1 DATA SETS/EagleSFR.xlsx")
View(EagleSFR)
# The following are the packages needed to do the graphs and automate a theme.
library(ggplot2)
library(ggthemes)
library(tidyverse)
# Get rid of any "scientific number" notation. Scientific notation is useful
# to represent very large or very small numbers.
options(scipen = 999)
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
library(readxl)
DataSet0 <- read_excel("C:/Users/dell/Dropbox/! 2023 SGDS! Cyndi/SGDS1 DATA SETS/DataSet0.xlsx")
View(DataSet0)
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
# Convert the Excel data format to the universal ymd (year month day) format.
DataSet0$DateSale <- ymd(DataSet0$DateSale)
# Create the DailyAdjust parameter, and calculate $/day adjustment).
DailyAdjust <- lm(formula = PriceSale ~ DateSale, data = DataSet0)
# Print the amount in the DailyAdjust parameter.
DailyAdjust
# The following are the packages needed to do the graphs and automate a theme.
library(ggplot2)
DataSet0 <- EagleSFR
# The following are the packages needed to do the graphs and automate a theme.
library(ggplot2)
library(ggthemes)
library(tidyverse)
# Get rid of any "scientific number" notation. Scientific notation is useful
# to represent very large or very small numbers.
options(scipen = 999)
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 4500000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
DataSet0 <- DataSet0
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
DataSet0 <- EagleSFR
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
library(readxl)
DataSet0 <- read_excel("C:/Users/dell/Dropbox/! 2023 SGDS! Cyndi/SGDS1 DATA SETS/DataSet0.xlsx")
View(DataSet0)
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
# Print the amount in the DailyAdjust parameter.
DailyAdjust
# Print the amount in the DailyAdjust parameter.
DailyAdjust[2]
# Print the amount in the DailyAdjust parameter.
DailyAdjust([2])
# Print the amount in the DailyAdjust parameter.
DailyAdjust
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(tidyverse)
options(scipen = 999)
DataSet0 <- read_csv("EagleSFR.csv")
DataSet0 <- read_excel("C:/Users/dell/Dropbox/! 2023 SGDS! Cyndi/SGDS1 DATA SETS/DataSet0.xlsx")
# DataSet0 <- read_csv("EagleSFR.csv")
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point()
# The following are the packages needed to do the graphs and automate a theme.
library(ggplot2)
library(ggthemes)
library(tidyverse)
# Get rid of any "scientific number" notation. Scientific notation is useful
# to represent very large or very small numbers.
options(scipen = 999)
# Create a scatterplot, regression line smoother, polynomial3 smoother,
# no standard error, select a theme you like, set y-axis value to zero (0),
# and label the graph.
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
theme_economist() +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
# Convert the Excel data format to the universal ymd (year month day) format.
DataSet0$DateSale <- ymd(DataSet0$DateSale)
# Create the DailyAdjust parameter, and calculate $/day adjustment).
DailyAdjust <- lm(formula = PriceSale ~ DateSale, data = DataSet0)
# Print the amount in the DailyAdjust parameter.
DailyAdjust
library(readxl)
EagleSFR <- read_excel("C:/Users/dell/Dropbox/! 2023 SGDS1 Student Files/SGDS1 DATA SETS/EagleSFR.xlsx")
View(EagleSFR)
# DataSet0 <- My new data set
DataSet0 <- EagleSFR
options(scipen = 999)
library(tidyverse)
library(lubridate)
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
DailyAdjust <- lm(formula = PriceSale ~ DateSale, DataSet0)
DailyAdjust
library(lubridate)
ggplot(DataSet0, aes(DateSale, PriceSale)) +
geom_point() +
geom_smooth(method = "lm", formula = y~poly(x,1), se = F) +
geom_smooth(method = "lm", formula = y~poly(x,3), se = F, color = "red") +
coord_cartesian(ylim = c(0, 450000)) +      #Rene Descartes
ggtitle("Market Selection and Price Trend")
DailyAdjust <- lm(formula = PriceSale ~ DateSale, DataSet0)
DailyAdjust
